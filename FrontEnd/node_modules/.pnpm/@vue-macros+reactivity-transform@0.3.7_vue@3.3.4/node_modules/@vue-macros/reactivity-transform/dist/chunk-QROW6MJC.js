"use strict";Object.defineProperty(exports, "__esModule", {value: true});





var _chunkSVPS4W7Ujs = require('./chunk-SVPS4W7U.js');

// src/index.ts
var _unplugin = require('unplugin');









var _common = require('@vue-macros/common');
function resolveOption(options) {
  const version = options.version || _common.detectVueVersion.call(void 0, );
  return {
    include: [_common.REGEX_SRC_FILE, _common.REGEX_VUE_SFC, _common.REGEX_SETUP_SFC, _common.REGEX_VUE_SUB],
    exclude: [_common.REGEX_NODE_MODULES],
    ...options,
    version
  };
}
var name = "unplugin-reactivity-transform";
var src_default = _unplugin.createUnplugin.call(void 0, 
  (userOptions = {}) => {
    const options = resolveOption(userOptions);
    const filter = _common.createFilter.call(void 0, options);
    return {
      name,
      enforce: "pre",
      resolveId(id) {
        if (id === _chunkSVPS4W7Ujs.helperId)
          return id;
      },
      loadInclude(id) {
        return id === _chunkSVPS4W7Ujs.helperId;
      },
      load(_id) {
        const id = _common.normalizePath.call(void 0, _id);
        if (id === _chunkSVPS4W7Ujs.helperId)
          return _chunkSVPS4W7Ujs.code_default;
      },
      transformInclude(id) {
        return filter(id);
      },
      transform(code, id) {
        if (_common.REGEX_VUE_SFC.test(id) || _common.REGEX_SETUP_SFC.test(id) || _common.REGEX_VUE_SUB.test(id)) {
          return _chunkSVPS4W7Ujs.transformVueSFC.call(void 0, code, id);
        } else if (_chunkSVPS4W7Ujs.shouldTransform.call(void 0, code)) {
          return _chunkSVPS4W7Ujs.transform.call(void 0, code, {
            filename: id,
            sourceMap: true
          });
        }
      }
    };
  }
);



exports.src_default = src_default;
